class Task:
    def __init__(self, title, description, due_date):
        self.title = title
        self.description = description
        self.due_date = due_date
        self.completed = False

    def mark_complete(self):
        self.completed = True

    def __str__(self):
        status = "‚úÖ" if self.completed else "‚ùå"
        return f"{status} {self.title} (Due: {self.due_date})\n  {self.description}"


class ToDoList:
    def __init__(self):
        self.tasks = []

    def add_task(self, task):
        self.tasks.append(task)

    def list_tasks(self):
        for task in self.tasks:
            print(task)

    def list_incomplete_tasks(self):
        for task in self.tasks:
            if not task.completed:
                print(task)

    def mark_task_complete(self, index):
        if 0 <= index < len(self.tasks):
            self.tasks[index].mark_complete()
        else:
            print("‚ùó –ù–µ–≤–µ—Ä–Ω—ã–π –Ω–æ–º–µ—Ä –∑–∞–¥–∞—á–∏.")


def main():
    todo = ToDoList()

    while True:
        print("\n===== –ú–µ–Ω—é ToDo List =====")
        print("1. –î–æ–±–∞–≤–∏—Ç—å –∑–∞–¥–∞—á—É")
        print("2. –û—Ç–º–µ—Ç–∏—Ç—å –∑–∞–¥–∞—á—É –∫–∞–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—É—é")
        print("3. –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –∑–∞–¥–∞—á–∏")
        print("4. –ü–æ–∫–∞–∑–∞—Ç—å —Ç–æ–ª—å–∫–æ –Ω–µ–≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ")
        print("5. –í—ã—Ö–æ–¥")

        choice = input("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ: ")

        if choice == "1":
            title = input("–ù–∞–∑–≤–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏: ")
            desc = input("–û–ø–∏—Å–∞–Ω–∏–µ: ")
            due = input("–°—Ä–æ–∫ (–Ω–∞–ø—Ä–∏–º–µ—Ä, 2025-06-01): ")
            task = Task(title, desc, due)
            todo.add_task(task)
        elif choice == "2":
            todo.list_tasks()
            idx = int(input("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –∑–∞–¥–∞—á–∏ (—Å 0): "))
            todo.mark_task_complete(idx)
        elif choice == "3":
            todo.list_tasks()
        elif choice == "4":
            todo.list_incomplete_tasks()
        elif choice == "5":
            print("–í—ã—Ö–æ–¥.")
            break
        else:
            print("‚ùó –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä.")

if __name__ == "__main__":
    main()

class Post:
    def __init__(self, title, content, author):
        self.title = title
        self.content = content
        self.author = author

    def __str__(self):
        return f"üìå {self.title} ‚Äî by {self.author}\n{self.content}\n"

class Blog:
    def __init__(self):
        self.posts = []

    def add_post(self, post):
        self.posts.append(post)

    def list_posts(self):
        for i, post in enumerate(self.posts):
            print(f"({i}) {post}")

    def posts_by_author(self, author_name):
        for post in self.posts:
            if post.author.lower() == author_name.lower():
                print(post)

    def delete_post(self, index):
        if 0 <= index < len(self.posts):
            del self.posts[index]
        else:
            print("‚ùó –ù–µ–≤–µ—Ä–Ω—ã–π –∏–Ω–¥–µ–∫—Å.")

    def edit_post(self, index, new_title=None, new_content=None):
        if 0 <= index < len(self.posts):
            if new_title:
                self.posts[index].title = new_title
            if new_content:
                self.posts[index].content = new_content
        else:
            print("‚ùó –ù–µ–≤–µ—Ä–Ω—ã–π –∏–Ω–¥–µ–∫—Å.")

def main():
    blog = Blog()

    while True:
        print("\n===== –ú–µ–Ω—é –ë–ª–æ–≥–∞ =====")
        print("1. –î–æ–±–∞–≤–∏—Ç—å –ø–æ—Å—Ç")
        print("2. –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –ø–æ—Å—Ç—ã")
        print("3. –ü–æ–∫–∞–∑–∞—Ç—å –ø–æ—Å—Ç—ã –ø–æ –∞–≤—Ç–æ—Ä—É")
        print("4. –£–¥–∞–ª–∏—Ç—å –ø–æ—Å—Ç")
        print("5. –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ—Å—Ç")
        print("6. –í—ã—Ö–æ–¥")

        choice = input("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ: ")

        if choice == "1":
            title = input("–ó–∞–≥–æ–ª–æ–≤–æ–∫: ")
            content = input("–°–æ–¥–µ—Ä–∂–∏–º–æ–µ: ")
            author = input("–ê–≤—Ç–æ—Ä: ")
            blog.add_post(Post(title, content, author))

        elif choice == "2":
            blog.list_posts()

        elif choice == "3":
            name = input("–í–≤–µ–¥–∏—Ç–µ –∏–º—è –∞–≤—Ç–æ—Ä–∞: ")
            blog.posts_by_author(name)

        elif choice == "4":
            blog.list_posts()
            idx = int(input("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –ø–æ—Å—Ç–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è: "))
            blog.delete_post(idx)

        elif choice == "5":
            blog.list_posts()
            idx = int(input("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –ø–æ—Å—Ç–∞ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: "))
            new_title = input("–ù–æ–≤—ã–π –∑–∞–≥–æ–ª–æ–≤–æ–∫ (–æ—Å—Ç–∞–≤—å –ø—É—Å—Ç—ã–º, –µ—Å–ª–∏ –Ω–µ –º–µ–Ω—è—Ç—å): ")
            new_content = input("–ù–æ–≤–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ (–æ—Å—Ç–∞–≤—å –ø—É—Å—Ç—ã–º, –µ—Å–ª–∏ –Ω–µ –º–µ–Ω—è—Ç—å): ")
            blog.edit_post(idx, new_title or None, new_content or None)

        elif choice == "6":
            print("–í—ã—Ö–æ–¥ –∏–∑ –±–ª–æ–≥–∞.")
            break

        else:
            print("‚ùó –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä.")


class Account:
    def __init__(self, acc_number, holder_name, balance=0):
        self.acc_number = acc_number
        self.holder_name = holder_name
        self.balance = balance

    def deposit(self, amount):
        if amount > 0:
            self.balance += amount
            print(f"üí∞ –ü–æ–ø–æ–ª–Ω–µ–Ω–æ: {amount}")
        else:
            print("‚ùó –°—É–º–º–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–π.")

    def withdraw(self, amount):
        if amount > self.balance:
            print("‚ùó –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤.")
        elif amount > 0:
            self.balance -= amount
            print(f"üí∏ –°–Ω—è—Ç–æ: {amount}")
        else:
            print("‚ùó –ù–µ–≤–µ—Ä–Ω–∞—è —Å—É–º–º–∞.")

    def get_balance(self):
        return self.balance

    def __str__(self):
        return f"–°—á—ë—Ç: {self.acc_number}, –í–ª–∞–¥–µ–ª–µ—Ü: {self.holder_name}, –ë–∞–ª–∞–Ω—Å: {self.balance}"

class Bank:
    def __init__(self):
        self.accounts = {}

    def add_account(self, acc):
        self.accounts[acc.acc_number] = acc

    def find_account(self, acc_number):
        return self.accounts.get(acc_number)

    def transfer(self, from_acc, to_acc, amount):
        sender = self.find_account(from_acc)
        receiver = self.find_account(to_acc)
        if sender and receiver:
            if sender.balance >= amount:
                sender.withdraw(amount)
                receiver.deposit(amount)
                print("‚úÖ –ü–µ—Ä–µ–≤–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω.")
            else:
                print("‚ùó –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤.")
        else:
            print("‚ùó –û–¥–∏–Ω –∏–∑ —Å—á–µ—Ç–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω.")

def main():
    bank = Bank()

    while True:
        print("\n===== –ú–µ–Ω—é –ë–∞–Ω–∫–∞ =====")
        print("1. –î–æ–±–∞–≤–∏—Ç—å —Å—á—ë—Ç")
        print("2. –ü–æ–ø–æ–ª–Ω–∏—Ç—å —Å—á—ë—Ç")
        print("3. –°–Ω—è—Ç—å –¥–µ–Ω—å–≥–∏")
        print("4. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –±–∞–ª–∞–Ω—Å")
        print("5. –ü–µ—Ä–µ–≤–µ—Å—Ç–∏ –¥–µ–Ω—å–≥–∏")
        print("6. –ü–æ–∫–∞–∑–∞—Ç—å –¥–µ—Ç–∞–ª–∏ —Å—á—ë—Ç–∞")
        print("7. –í—ã—Ö–æ–¥")

        choice = input("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ: ")

        if choice == "1":
            num = input("–ù–æ–º–µ—Ä —Å—á—ë—Ç–∞: ")
            name = input("–ò–º—è –≤–ª–∞–¥–µ–ª—å—Ü–∞: ")
            bank.add_account(Account(num, name))

        elif choice == "2":
            num = input("–ù–æ–º–µ—Ä —Å—á—ë—Ç–∞: ")
            acc = bank.find_account(num)
            if acc:
                amount = float(input("–°—É–º–º–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è: "))
                acc.deposit(amount)
            else:
                print("–°—á—ë—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω.")

        elif choice == "3":
            num = input("–ù–æ–º–µ—Ä —Å—á—ë—Ç–∞: ")
            acc = bank.find_account(num)
            if acc:
                amount = float(input("–°—É–º–º–∞ —Å–Ω—è—Ç–∏—è: "))
                acc.withdraw(amount)
            else:
                print("–°—á—ë—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω.")

        elif choice == "4":
            num = input("–ù–æ–º–µ—Ä —Å—á—ë—Ç–∞: ")
            acc = bank.find_account(num)
            if acc:
                print(f"–ë–∞–ª–∞–Ω—Å: {acc.get_balance()}")
            else:
                print("–°—á—ë—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω.")

        elif choice == "5":
            from_acc = input("–°—á—ë—Ç-–æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å: ")
            to_acc = input("–°—á—ë—Ç-–ø–æ–ª—É—á–∞—Ç–µ–ª—å: ")
            amount = float(input("–°—É–º–º–∞ –ø–µ—Ä–µ–≤–æ–¥–∞: "))
            bank.transfer(from_acc, to_acc, amount)

        elif choice == "6":
            num = input("–ù–æ–º–µ—Ä —Å—á—ë—Ç–∞: ")
            acc = bank.find_account(num)
            if acc:
                print(acc)
            else:
                print("–°—á—ë—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω.")

        elif choice == "7":
            print("–í—ã—Ö–æ–¥ –∏–∑ —Å–∏—Å—Ç–µ–º—ã –±–∞–Ω–∫–∞.")
            break

        else:
            print("‚ùó –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä.")

































